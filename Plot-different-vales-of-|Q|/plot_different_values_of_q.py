# -*- coding: utf-8 -*-
"""Plot-different-values-of-Q.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1eyssP5FZcEm_mqtFK2ez2w5nk9Uuyz0C
"""

import matplotlib as mpl
import matplotlib.pyplot as plt
import numpy as np
import pandas as pd

"""## First Figure for Feature Mapping"""

# 10

A_10 = [
        [0.2168, 0.3157, 0.4142, 0.2524, 0.2811, 0.3265, 0.4297, 0.3416],
        [0.1578, 0.1778, 0.1886, 0.2130, 0.1849, 0.2043, 0.2297, 0.2097],
        [0.1800, 0.3681, 0.3486, 0.2611, 0.2054, 0.3670, 0.3822, 0.2746],
        [0.1773, 0.1768, 0.1692, 0.1865, 0.2319, 0.2070, 0.2378, 0.2297],
        [0.1616, 0.1622, 0.1578, 0.1784, 0.1822, 0.1654, 0.1984, 0.1951],
        [0.2184, 0.2357, 0.2984, 0.2319, 0.2486, 0.2368, 0.3416, 0.2805],
        [0.2773, 0.3784, 0.3784, 0.3459, 0.2600, 0.3784, 0.3784, 0.3384],
        [0.2189, 0.2092, 0.2470, 0.2481, 0.2222, 0.1908, 0.2049, 0.2443]
        ]

# 20
A_20 = [
        [0.1957, 0.2827, 0.4222, 0.2276, 0.2238, 0.2832, 0.4335, 0.2686],
        [0.1724, 0.1800, 0.2173, 0.1859, 0.1762, 0.2000, 0.2389, 0.2259],
        [0.1778, 0.3535, 0.3519, 0.2119, 0.1762, 0.3724, 0.3714, 0.2330],
        [0.1908, 0.1735, 0.1811, 0.1827, 0.2189, 0.2189, 0.2130, 0.2178],
        [0.1546, 0.1568, 0.1751, 0.1659, 0.1724, 0.1778, 0.1876, 0.1914],
        [0.2292, 0.2497, 0.3395, 0.2265, 0.2530, 0.2643, 0.3443, 0.2476],
        [0.2427, 0.3795, 0.3795, 0.2773, 0.2573, 0.3784, 0.3805, 0.2881],
        [0.2081, 0.1805, 0.2503, 0.2032, 0.2038, 0.1881, 0.1778, 0.2168]
       ]

# 30
A_30 = [
        [0.1719, 0.2486, 0.3643, 0.2243, 0.2000, 0.2659, 0.4265, 0.2595],
        [0.1503, 0.1778, 0.2059, 0.1838, 0.1876, 0.1859, 0.2405, 0.2022],
        [0.1670, 0.3503, 0.3405, 0.2168, 0.1854, 0.3627, 0.3535, 0.2351],
        [0.1805, 0.1800, 0.1676, 0.1735, 0.2124, 0.2292, 0.2059, 0.2238],
        [0.1643, 0.1584, 0.1562, 0.1546, 0.1551, 0.1762, 0.1670, 0.1735],
        [0.2265, 0.2497, 0.3416, 0.2173, 0.2400, 0.2681, 0.3632, 0.2449],
        [0.2416, 0.3784, 0.3816, 0.2551, 0.2357, 0.3827, 0.3838, 0.2659],
        [0.1822, 0.2151, 0.2843, 0.1995, 0.1935, 0.1638, 0.1714, 0.2065]
       ]

# 40
A_40 = [
        [0.1584, 0.2454, 0.3676, 0.2395, 0.1946, 0.2405, 0.3968, 0.2443],
        [0.1541, 0.1886, 0.2130, 0.2022, 0.1681, 0.1741, 0.2351, 0.2011],
        [0.1811, 0.3616, 0.3362, 0.2141, 0.1924, 0.3686, 0.3438, 0.2368],
        [0.1843, 0.1859, 0.1611, 0.1973, 0.2314, 0.2038, 0.1968, 0.2184],
        [0.1546, 0.1751, 0.1665, 0.1741, 0.1735, 0.1600, 0.1746, 0.1795],
        [0.2303, 0.2719, 0.3627, 0.2368, 0.2497, 0.2541, 0.3892, 0.2443],
        [0.2157, 0.3805, 0.3832, 0.2616, 0.2486, 0.3795, 0.3849, 0.2703],
        [0.1659, 0.1978, 0.2422, 0.1897, 0.1951, 0.1530, 0.1686, 0.1784]
       ]

# 50
A_50 = [
        [0.1784, 0.2384, 0.3589, 0.2216, 0.1865, 0.2292, 0.4092, 0.2427],
        [0.1530, 0.2027, 0.2243, 0.1946, 0.1595, 0.1811, 0.2405, 0.2000],
        [0.1659, 0.3627, 0.3330, 0.2141, 0.1914, 0.3616, 0.3714, 0.2232],
        [0.1919, 0.2097, 0.1778, 0.1995, 0.2032, 0.2141, 0.2114, 0.2114],
        [0.1676, 0.1816, 0.1746, 0.1686, 0.1724, 0.1670, 0.1859, 0.1676],
        [0.2319, 0.2854, 0.3876, 0.2276, 0.2476, 0.2481, 0.3632, 0.2422],
        [0.2324, 0.3805, 0.3881, 0.2405, 0.2508, 0.3816, 0.3886, 0.2557],
        [0.1719, 0.2162, 0.2557, 0.2146, 0.2092, 0.1654, 0.1757, 0.1859]
       ]

I = [10, 20, 30, 40, 50]

classifiers = ['LSVM', 'GSVM', 'PSVM', 'DT', 'RF', 'KNN', 'LR', 'CNN']

FM = ['Vote(MD v_Q^exp)', 'Vote(Rand v_Q)', 'Vote(v_Q^ζ)', 'Vote(Rand v_Q^exp)', 
      'MD v_Q^exp', 'Rand v_Q', 'Rand v_Q^ζ', 'Rand v_Q^exp']

markers = ['o', 'v', '^', '+', 'd', '1', '*', 'p']

linestyles = ['solid', 'dotted', 'dashed','dashdot', 'solid', 'dotted','dashed','dashdot']


for j in range(8):
    plt.figure(figsize=(10, 6))
    for i in range(8):
        A = [A_10[i][j], A_20[i][j], A_30[i][j], A_40[i][j], A_50[i][j]]
        plt.scatter(I, A, marker = markers[i]);
        plt.plot(I, A, linestyle = linestyles[i], label = classifiers[i], linewidth = 2, 
                 markersize=20)
    plt.xticks(range(10, 60, 10), I)
    plt.xlabel('Number of landmarks')
    plt.ylabel('Average test error')
    plt.title(FM[j])
    plt.legend()
    plt.savefig('/Users/hasan/Desktop/plots/plots-|Q|/'+FM[j]+'.png', bbox_inches='tight', dpi=200)
    plt.show()

